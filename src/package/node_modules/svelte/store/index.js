import{noop as e,safe_not_equal as t}from"../internal/index.js";export{get_store_value as get}from"../internal/index.js";const n=[];function o(e,t){return{subscribe:r(e,t).subscribe}}function r(o,r=e){let s;const i=new Set;function u(e){if(t(o,e)&&(o=e,s)){const e=!n.length;for(const e of i)e[1](),n.push(e,o);if(e){for(let e=0;e<n.length;e+=2)n[e][0](n[e+1]);n.length=0}}}return{set:u,update:function(e){u(e(o))},subscribe:function(t,n=e){const c=[t,n];return i.add(c),1===i.size&&(s=r(u)||e),t(o),()=>{i.delete(c),0===i.size&&(s(),s=null)}}}}export{o as readable,r as writable};