var t=function(){function t(t){this.payload=t}return t.prototype.getType=function(){return this.payload.type},t.prototype.getInputValue=function(t){return void 0===t&&(t=0),this.getArrayElement(this.payload.input,t).value},t.prototype.setInputValue=function(t,e){void 0===e&&(e=0),this.getArrayElement(this.payload.input,e).value=t},t.prototype.getOutputValue=function(t){return void 0===t&&(t=0),this.getArrayElement(this.payload.output,t).value},t.prototype.getOutputByName=function(t,e){var r=this.payload.output.find((function(e){return e.name===t}));return r?r.value:e},t.prototype.getArrayElement=function(t,e){if(void 0===e&&(e=0),void 0===t)throw new Error("No NameValue array was provided to search (selector ".concat(e,")"));if("number"==typeof e){if(e<0||e>t.length-1)throw new Error("Selector index ".concat(e," is out of range"));return t[e]}if("string"==typeof e){if(!(r=t.find((function(t){return t.name===e}))))throw new Error('Missing callback input entry "'.concat(e,'"'));return r}if("object"==typeof e&&e.test&&e.exec){var r;if(!(r=t.find((function(t){return e.test(t.name)}))))throw new Error('Missing callback input entry "'.concat(e,'"'));return r}throw new Error("Invalid selector value type")},t}();export{t as default};