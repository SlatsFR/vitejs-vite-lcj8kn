import e from"../../../node_modules/xss/lib/index.js";import{get_store_value as r}from"../../../node_modules/svelte/internal/index.js";import t from"../../../node_modules/zod/lib/index.js";import{strings as o}from"../locale.store.js";const n=t.record(t.string().regex(/^[^<>]*$/)).optional();function s(t,s,a){if(!t)throw new Error("No key provided to t()");const c=r(o),i=c&&c[t]||"";let m="";if(s?(n.parse(s),Object.keys(s).map((e=>{const r=new RegExp(`{${e}}`,"g");m=i.replace(r,s[e])}))):m=i,m||a)!m&&a&&(m=a);else{const e=t.replace(/([A-Z])/g," $1");m=e.charAt(0).toUpperCase()+e.slice(1)}return e(m)}function a(e){if("string"!=typeof e&&"number"!=typeof e)throw new Error("Parameter for textToKey function needs to be of type string or number");if("number"==typeof e&&(e=String(e)),e.match(/^([A-Z]+)$/))return e.toLowerCase();if(e.match(/^([A-Z]+[\W]*)$/))return e.replace(/\W/g,"").toLowerCase();const r=e.replace(/(\W)([\w\d])/g,((e,r,t)=>r.match(/['’"”]/)&&t.match(/[a-z]/)?t:r.match(/\W/)&&t.match(/[a-z]/)?t.toUpperCase():(r.match(/\W/)&&t.match(/\d/),t))).replace(/(\W)/g,"");return r.charAt(0).toLowerCase()+r.slice(1)}export{s as interpolate,a as textToKey};